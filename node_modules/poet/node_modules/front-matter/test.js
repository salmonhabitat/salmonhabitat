var assert = require('assert')
  , frontmatter = require('./index.js')
  , fs = require('fs')

describe('frontmatter', function(){
  describe('when the arg is NOT a `string`', function(){
    it('should not throw', function(){
      assert.doesNotThrow(function(){ frontmatter() })
      assert.doesNotThrow(function(){ frontmatter(null) })
      assert.doesNotThrow(function(){ frontmatter(undefined) })
      assert.doesNotThrow(function(){ frontmatter(false) })
    })
  }) // describe('when the arg is NOT a `string`', ...

  describe('when the arg is a `string`', function(){
    describe('without front matter', function(){
      it('should not throw', function(){
        assert.doesNotThrow(function(){ frontmatter('') })
      })

      it('should return a object with attributes and a body', function(){
        var extract = frontmatter('')

        assert.notEqual(extract.body, undefined)
        // assert(extract.attributes)
      });
    }) // describe('without front matter', ...

    describe('with front matter', function(){
      before(function(done){
        fs.readFile('example.md', 'utf8', function(err, data){
          if (err) throw err

          done(null, data)
        })
      })

      // it('', function(contents){
      //   console.log('arguments:', arguments);
      //
      // })
    }) // describe('with front matter', ...
  }) // describe('when the arg is a string ', ...
}) // describe('frontmatter', ...

/*

it should return an object with atributes and body
it should return the yaml in the attributes
it should return the remainig text in the body

*/
